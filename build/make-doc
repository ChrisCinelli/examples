#!/usr/bin/env bash

PROJECT_ROOT=$(cd -P $(dirname "$0") && cd .. && pwd)
SRC_ROOT="$PROJECT_ROOT/src"
OUT_ROOT="$PROJECT_ROOT/html"
DOCCO_TEMPLATE="$PROJECT_ROOT/build/docco-template.html"

## check for docco dependencies
##
if ! which npm > /dev/null; then
		echo "Error: Docco requires npm to build code examples."
		exit 1
fi

if ! which pygmentize > /dev/null; then
		echo "Error: Docco requires python-pygments to build code examples."
		exit 1
fi

function convert_source {
		while read path; do
				#remove api_root and beginning slash
				local rel_path="${path##$SRC_ROOT}"
				rel_path="${rel_path#/}"
				#create out url path
				local out_path=$(basename $(echo "$rel_path" | tr '/' '-') '.js')
				out_path=$(echo "${out_path%-src-Application}" | tr '[:upper:]' '[:lower]')
				
				#generate annotated html with docco
				if docco --template "$DOCCO_TEMPLATE" --output "$OUT_ROOT/example/$out_path" "$SRC_ROOT/$rel_path" &>/dev/null; then
						#rename Application.html to index.html, all classes should be in single file
						mv "$OUT_ROOT/example/$out_path/Application.html" "$OUT_ROOT/example/$out_path/index.html"
						echo "  * $OUT_ROOT/example/$out_path"
				else
						echo "Error: Docco conversion from file '$SRC_ROOT/$rel_path'"
						exit 1
				fi

				#copy over screenshots in img directory
				local example_path="$SRC_ROOT/$rel_path"
				example_path="${example_path%/src/Application.js}"
				if [ -d "$example_path/img" ]; then
						cp -a "$example_path/img" "$OUT_ROOT/example/$out_path/"
				fi

				#remove the css file docco copies over, only reference the one in the template
				if [ -f "$OUT_ROOT/example/$out_path/docco.css" ]; then
						rm "$OUT_ROOT/example/$out_path/docco.css"
				fi
		done < <(find "$SRC_ROOT" -type f -name '*.js' | grep -v ".*/sdk/.*" | grep -v ".*/build/.*")
}

if [ -d "$OUT_ROOT/example" ]; then
		rm -rf "$OUT_ROOT/example"
fi

mkdir -p "$OUT_ROOT/example"

echo "Building docs ..."
convert_source
